akka {
    actor {
        provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
        enabled-transports = ["akka.remote.netty.tcp"]
        log-remote-lifecycle-events = off
        netty.tcp {
            hostname = "127.0.0.1"
        }
    }
    extensions = ["akka.cluster.client.ClusterClientReceptionist"]
}

file-io-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 1
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 24
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 256
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 1000
}
